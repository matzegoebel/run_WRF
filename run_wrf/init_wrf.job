#!/bin/bash


set -e


code_dir=$(pwd)
build_dir="${build_path}/$wrfv"
run_dir="${run_path}/${run_id}"
wrf_case_dir="${build_dir}/test/$ideal_case"

echo
echo "Copy files to $run_dir"
rm $run_dir -rf
mkdir -p $run_dir
cd $run_dir

#redirect logs to file and screen
exec 1> >(tee -a "init.log")
exec 2> >(tee -a "init.err")

#print current wrf version (commit)
cd ${build_dir}
if [ -d .git ]; then
  echo "Current WRF commit:"
  git show -s --oneline
  echo
fi

cd $run_dir

eval $module_load


#from run directory for data files needed by physics modules; symbolic links sufficient
cp -s ${build_dir}/run/* .
#remove old data if available
rm -f wrfinput_d?? rsl.*

#from ideal case directory for namelist file, input sounding and IO file 
cd $wrf_case_dir
cp --remove-destination namelist.input $iofile $run_dir

if [ -n "${input_sounding}" ]
then
  input_sounding="input_sounding_${input_sounding}"
else
  input_sounding="input_sounding"
fi
if [ -f ${input_sounding} ]
then
  rm -f "${run_dir}/input_sounding"
  cp ${input_sounding} "${run_dir}/input_sounding"
else
  echo "Input sounding ${input_sounding} not available! Exit..." >&2
  exit 1
fi

cd $run_dir
#binaries from main
cp -f -b ${build_dir}/main/wrf.exe ${build_dir}/main/ideal.exe .

echo "use input sounding: ${input_sounding}"
echo "create namelist"

source ${code_dir}/search_replace.sh namelist.input namelist.$run_id 1 $wrf_args >> init.log 2>> init.err
cp namelist.$run_id namelist.input

echo "Running ideal"

#redirect output to file only
exec 1>> "init.log"
exec 2>> "init.err"

set +e
./ideal.exe
err=$?
wait
set -e

if [[ -f rsl.out.0000 ]]
then
  if (( err != 0 ))
  then
    >&2 cat rsl.error.0000
  else
    cat rsl.out.0000
  fi
fi

#include information about number of processors in namelist.input
if (( nx*ny > 1 ))
then
  source ${code_dir}/search_replace.sh namelist.input namelist.input 0 nproc_x $nx nproc_y $ny
fi

exit $err

