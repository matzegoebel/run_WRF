#!/bin/bash

#$ -cwd
#$ -o /scratch/$USER/phd/logs/$JOB_NAME_$JOB_ID_init.out
#$ -e /scratch/$USER/phd/logs/$JOB_NAME_$JOB_ID_init.err
#$ -M matthias.goebel@uibk.ac.at
#$ -l h_rt=00:10:00
#$ -l h_stack=128M


set -e

if (( cluster==0 ))
then
  ulimit -s unlimited
  set -o errexit

else
  echo "start cluster job"
  module purge
  module load intel/18.0u1 netcdf-4

  #~ if [ -d $SCRATCH/parallel_studio_2019 ]
  #~ then
    #~ module purge
    #~ export NETCDF="$SCRATCH/netcdf"
    #~ source ${home_dir}/parallel_studio_2019/parallel_studio_xe_2019.4.070/bin/psxevars.sh
  #~ fi
fi

if [ -z $SGE_STDOUT_PATH ]
then
  wrf_args=$1
fi


code_dir=$(pwd)
build_dir="${build_path}/$wrfv"
run_dir="${run_path}/WRF_$JOB_NAME"
wrf_case_dir="${build_dir}/test/$ideal_case"
cd $wrf_case_dir

echo "Copy files to $run_dir"
rm $run_dir -rf
mkdir -p $run_dir
cd $run_dir
#from run directory for data files needed by physics modules; symbolic links sufficient
cp -s ${build_dir}/run/* .
rm -f namelist.input input_sounding
#from ideal case directory for input sounding and namelist files
cp -r -n $wrf_case_dir/* .
#binaries from main
cp -f -b ${build_dir}/main/wrf.exe ${build_dir}/main/ideal.exe .

if [ -n "${input_sounding}" ]
then
  input_sounding_org="input_sounding"
  input_sounding=${input_sounding_org}_${input_sounding}
  rm -f ${input_sounding_org}
  if [ -f ${input_sounding} ]
  then
    cp ${input_sounding} ${input_sounding_org}
  else
    echo "Input sounding ${input_sounding} not available! Exit..."
    exit 1
  fi
else
  input_sounding="input_sounding" 
fi

echo "use input sounding: ${input_sounding}"

#redirect logs to file and stdout
exec 1> "init.log"
exec 2> "init.err"

echo
echo "create namelist"
#echo $wrf_args

source ${code_dir}/search_replace.sh namelist.input namelist.$JOB_NAME 0 $wrf_args
cp namelist.$JOB_NAME namelist.input

echo
echo "Running ideal"

echo
echo "sleep $sleep s"
echo
sleep $sleep


./ideal.exe
wait

#include information about number of processors in namelist.input
if ((nx*ny > 1))
then
  cat rsl.error.0000
  source ${code_dir}/search_replace.sh namelist.input namelist.input 0 nproc_x $nx nproc_y $ny
fi
